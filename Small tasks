How to create user in Jenkins server??
	Manage Jenkins > Users > Create User 
Manage Jenkins > Security > Authorization > Matrix Based Security > Add user

Using docker commands without sudo (donâ€™t use sudo su) ??
grep -E '^docker:' /etc/group

sudo groupadd docker
sudo usermod -aG docker <username>
exit or logout or sudo reboot

Automatic restart of a container when vm starts??
We can do this 3 ways
1)	While creating docker container we can use  --restart=always
2)	Docker compose file
3)	Systemd service- in service part we need to give restart always.





1)	First pipeline (Python)

pipeline {
    agent any
     parameters {
        string(name: 'yearInput', defaultValue:'1900', description: 'Enter a year:')
    }

    stages {
        stage('Checkout') {
            steps {

               git branch: 'main', url: 'https://github.com/SwathiIndla/leap-year.git'
            }
        }

        stage('Run Python Leap Year Code') {
            steps {
                script {

                 def year = params.yearInput
                 //sh "python3 year.py ${year}"
                 def result = sh(script: "python3 year.py ${year}",returnStdout:true)
                 env.RESULT=result



                }
            }
        }
        stage('file'){
            steps{
                script{
                 def buildNumber = env.BUILD_NUMBER 
                 def fileName = "leap_year${buildNumber}.txt"
                 env.FILENAME=fileName
                }
            }
        }
        stage('store'){
            steps{
                script{
                 writeFile file: fileName, text: result
                 archiveArtifacts artifacts: fileName, onlyIfSuccessful: true
                }
            }
        }
        stage('result'){
            steps{
                echo result
            }
        }
    }

    post {
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
pipeline {
    agent any
     parameters {
        string(name: 'yearInput', defaultValue:'1900', description: 'Enter a year:')
    }

    stages {
        stage('Checkout') {
            steps {

               git branch: 'main', url: 'https://github.com/SwathiIndla/leap-year.git'
            }
        }

        stage('Run Python Leap Year Code') {
            steps {
                script {

                 def year = params.yearInput
                 //sh "python3 year.py ${year}"
                 def result = sh(script: "python3 year.py ${year}",returnStdout:true)
                 env.RESULT=result



                }
            }
        }
        stage('file'){
            steps{
                script{
                 def buildNumber = env.BUILD_NUMBER 
                 def fileName = "leap_year${buildNumber}.txt"
                 env.FILENAME=fileName
                }
            }
        }
        stage('store'){
            steps{
                script{
                 writeFile file: fileName, text: result
                 archiveArtifacts artifacts: fileName, onlyIfSuccessful: true
                }
            }
        }
        stage('result'){
            steps{
                echo result
            }
        }
    }

    post {
        success {
            echo 'Pipeline executed successfully!'
             emailext subject: "Pipeline Sucess: ${currentBuild.fullDisplayName}",
                     body: "The pipeline ${currentBuild.fullDisplayName} has Success. Please check the Jenkins console output for details.",
                     to: "alavalapatisree2014@gmail.com ,swathiendla21@gmail.com",
                     attachLog: true
        }
        failure {
            echo 'Pipeline failed!'
             emailext subject: "Pipeline Failed: ${currentBuild.fullDisplayName}",
                     body: "The pipeline ${currentBuild.fullDisplayName} has failed. Please check the Jenkins console output for details.",
                     to: "alavalapatisree2014@gmail.com,swathiendla21@gmail.com",
                     attachLog: true
        }

    }
}


