1) creating docker image and pushing to docker hub

pipeline {
    agent any
    tools { maven 'maven' }
    stages{
        stage('Code from Git') {
            steps{
                git branch: 'main', url: 'https://github.com/alavalapatisree/Petclinic.git'
            }
        }
        stage('Docker check') {
            steps{
                sh "docker --version"
            }
        }
        stage('maven install') {
            steps{
                //sh "sudo apt install -y maven"
                sh "export DEBIAN_FRONTEND=noninteractive && sudo apt-get install -y maven"
            }
        }
        
        stage('maven build') {
            steps{
                sh "mvn clean package"
            }
        }
        stage('Docker image') {
            steps{
                script {
                    withDockerRegistry(credentialsId: '1c2a9e32-5e82-4700-a946-be16ab459a5b') {
                    sh "docker build -t pet ."
                    sh "docker tag pet alavalapatirupasree/pet:v1"
                    sh "docker push alavalapatirupasree/pet:v1"
                    }
                }
            }
        }
        //stage('Docker Container') {
            //steps{
                //sh "docker run -p 8090:8090 pet"
            //}
        //}
    }
}

2) deploying application to tomcat server using curl

pipeline {
    agent any
    tools { maven 'maven' }
    stages{
        stage('git code') {
            steps {
                git branch: 'main', url: 'https://github.com/alavalapatisree/Petclinic.git'
            }
        }
        
        stage('maven build') {
            steps{
                sh "mvn clean install"
            }
        }
        
        stage('deploy') {
            steps{
                sh "curl -v --upload-file /var/lib/jenkins/workspace/job/target/petclinic.war http://ip:8080/manager/text/deploy?path=/pet"
            }
        }
    }
}

3) deploying application to tomcat server using scp

pipeline {
    agent any
    tools { maven 'maven' }
    stages{
        stage('git code') {
            steps {
                git branch: 'main', url: 'https://github.com/alavalapatisree/Petclinic.git'
            }
        }
        
        stage('maven build') {
            steps{
                sh "mvn clean install"
            }
        }
        
        stage('deploy') {
            steps{
                sh "scp -v -i /var/lib/jenkins/.ssh/id_rsa /var/lib/jenkins/workspace/job/target/petclinic.war user@ip_address:/opt/tomcat/updated/webapps/"
                sh "scp -v -i /var/lib/jenkins/workspace/job/target/petclinic.war user@ip_address:/opt/tomcat/updated/webapps/"
                sh "scp -v -i /var/lib/jenkins/.ssh/id_rsa -o StrictHostKeyChecking=no /var/lib/jenkins/workspace/job/target/petclinic.war user@ip_address:/opt/tomcat/updated/webapps/"
            }
        }
    }
}
